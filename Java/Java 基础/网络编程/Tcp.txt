/* Tcp 通信
 * 客户端
 * 
 * Socket类
 * 	构造函数:
 * 		  Socket() 通过系统默认类型的 SocketImpl 创建未连接套接字 
 * 		  Socket(InetAddress address, int port) 创建一个流套接字并将其连接到指定 IP 地址的指定端口号。 
 * 		  Socket(InetAddress address, int port, InetAddress localAddr, int localPort) 创建一个套接字并将其连接到指定远程地址上的指定远程端口。 
 * 		  Socket(Proxy proxy) 创建一个未连接的套接字并指定代理类型（如果有），该代理不管其他设置如何都应被使用。 
 *		  protected  Socket(SocketImpl impl) 使用用户指定的 SocketImpl 创建一个未连接 Socket。 
 * 		  Socket(String host, int port) 创建一个流套接字并将其连接到指定主机上的指定端口号。 
 * 		  Socket(String host, int port, InetAddress localAddr, int localPort) 创建一个套接字并将其连接到指定远程主机上的指定远程端口。 
 *
 *  实例方法:
 *  	   void bind(SocketAddress bindpoint)  将套接字绑定到本地地址。 
 		   void close() 关闭此套接字。 
 		   void connect(SocketAddress endpoint) 将此套接字连接到服务器。 
 		   void connect(SocketAddress endpoint, int timeout)   将此套接字连接到服务器，并指定一个超时值。 
 		   SocketChannel getChannel()  返回与此数据报套接字关联的唯一 SocketChannel 对象（如果有）。 
 		   InetAddress getInetAddress()  返回套接字连接的地址。 
 		   InputStream getInputStream()  返回此套接字的输入流。 
           boolean getKeepAlive() 测试是否启用 SO_KEEPALIVE。 
 		   InetAddress getLocalAddress() 获取套接字绑定的本地地址。 
           int getLocalPort()  返回此套接字绑定到的本地端口。 
 		   SocketAddress getLocalSocketAddress()  返回此套接字绑定的端点的地址，如果尚未绑定则返回 null。 
 		   OutputStream getOutputStream() 返回此套接字的输出流。 
 		   int getPort()   返回此套接字连接到的远程端口。 
 		   int getReceiveBufferSize() 获取此 Socket 的 SO_RCVBUF 选项的值，该值是平台在 Socket 上输入时使用的缓冲区大小。 
 		   SocketAddress getRemoteSocketAddress() 返回此套接字连接的端点的地址，如果未连接则返回 null。 
 		   boolean getReuseAddress()  测试是否启用 SO_REUSEADDR。 
 		   int getSendBufferSize()  获取此 Socket 的 SO_SNDBUF 选项的值，该值是平台在 Socket 上输出时使用的缓冲区大小。 
 		   int getSoLinger()   返回 SO_LINGER 的设置。 
 		   int getSoTimeout() 返回 SO_TIMEOUT 的设置。 
 		   boolean getTcpNoDelay() 测试是否启用 TCP_NODELAY。 
 		   int getTrafficClass()  为从此 Socket 上发送的包获取 IP 头中的流量类别或服务类型。 
           boolean isBound() 返回套接字的绑定状态。 
           boolean isClosed() 返回套接字的关闭状态。 
           boolean isConnected() 返回套接字的连接状态。 
		   boolean isInputShutdown() 返回是否关闭套接字连接的半读状态 (read-half)。 
 		   boolean isOutputShutdown()  返回是否关闭套接字连接的半写状态 (write-half)。 
 		   void sendUrgentData(int data) 在套接字上发送一个紧急数据字节。 
 		   void setKeepAlive(boolean on) 启用/禁用 SO_KEEPALIVE。 
 		   void setOOBInline(boolean on) 启用/禁用 OOBINLINE（TCP 紧急数据的接收者） 默认情况下，此选项是禁用的，即在套接字上接收的 TCP 紧急数据被静默丢弃。 
 		   void setPerformancePreferences(int connectionTime, int latency, int bandwidth)  设置此套接字的性能偏好。 
 		   void setReceiveBufferSize(int size)  将此 Socket 的 SO_RCVBUF 选项设置为指定的值。 
 		   void setReuseAddress(boolean on) 启用/禁用 SO_REUSEADDR 套接字选项。 
           void setSendBufferSize(int size) 将此 Socket 的 SO_SNDBUF 选项设置为指定的值。 
		   static void setSocketImplFactory(SocketImplFactory fac) 为应用程序设置客户端套接字实现工厂。 
           void setSoLinger(boolean on, int linger)   启用/禁用具有指定逗留时间（以秒为单位）的 SO_LINGER。 
 		   void setSoTimeout(int timeout) 启用/禁用带有指定超时值的 SO_TIMEOUT，以毫秒为单位。 
 		   void setTcpNoDelay(boolean on) 启用/禁用 TCP_NODELAY（启用/禁用 Nagle 算法）。 
           void setTrafficClass(int tc)  为从此 Socket 上发送的包在 IP 头中设置流量类别 (traffic class) 或服务类型八位组 (type-of-service octet)。 
           void shutdownInput()   此套接字的输入流置于“流的末尾”。 
           void shutdownOutput()    禁用此套接字的输出流。 
           
 *
 * 服务端 ServerSocket类
 * 	构造函数:
 * 		 ServerSocket()  创建非绑定服务器套接字。 
　*		 ServerSocket(int port) 创建绑定到特定端口的服务器套接字。 
 *		 ServerSocket(int port, int backlog) 利用指定的 backlog 创建服务器套接字并将其绑定到指定的本地端口号。 
 *		 ServerSocket(int port, int backlog, InetAddress bindAddr)  使用指定的端口、侦听 backlog 和要绑定到的本地 IP 地址创建服务器。 
 *		 ServerSocket() 创建非绑定服务器套接字。 
 *		 ServerSocket(int port) 创建绑定到特定端口的服务器套接字。 
 *		 ServerSocket(int port, int backlog)  利用指定的 backlog 创建服务器套接字并将其绑定到指定的本地端口号。 
 *		 ServerSocket(int port, int backlog, InetAddress bindAddr) 使用指定的端口、侦听 backlog 和要绑定到的本地 IP 地址创建服务器。 
 *
 *	实例方法:
 *		 Socket accept() 侦听并接受到此套接字的连接。 
 *	     void bind(SocketAddress endpoint) 将 ServerSocket 绑定到特定地址（IP 地址和端口号）。 
 *		 void bind(SocketAddress endpoint, int backlog) 将 ServerSocket 绑定到特定地址（IP 地址和端口号）。 
 * 		 void close() 关闭此套接字。 
 *		 ServerSocketChannel getChannel() 返回与此套接字关联的唯一 ServerSocketChannel 对象（如果有）。 
 *		 InetAddress getInetAddress() 返回此服务器套接字的本地地址。 
 *		 int getLocalPort() 返回此套接字在其上侦听的端口。 
 *		 SocketAddress getLocalSocketAddress() 返回此套接字绑定的端点的地址，如果尚未绑定则返回 null。 
 *		 int getReceiveBufferSize()   获取此 ServerSocket 的 SO_RCVBUF 选项的值，该值是将用于从此 ServerSocket 接受的套接字的建议缓冲区大小。 
 *		 boolean getReuseAddress()  测试是否启用 SO_REUSEADDR。 
 *		 int getSoTimeout() 获取 SO_TIMEOUT 的设置。 
 *		 protected  void implAccept(Socket s) ServerSocket 的子类使用此方法重写 accept() 以返回它们自己的套接字子类。 
 *	     boolean isBound() 返回 ServerSocket 的绑定状态。 
 *		 boolean isClosed()  返回 ServerSocket 的关闭状态。 
 *		 void setPerformancePreferences(int connectionTime, int latency, int bandwidth) 设置此 ServerSocket 的性能首选项。 
 *		 void setReceiveBufferSize(int size) 为从此 ServerSocket 接受的套接字的 SO_RCVBUF 选项设置默认建议值。 
 *		 void setReuseAddress(boolean on) 	启用/禁用 SO_REUSEADDR 套接字选项。 
 *		 static void setSocketFactory(SocketImplFactory fac) 为应用程序设置服务器套接字实现工厂。 
 *		 void setSoTimeout(int timeout) 通过指定超时值启用/禁用 SO_TIMEOUT，以毫秒为单位。 
 *
 * */