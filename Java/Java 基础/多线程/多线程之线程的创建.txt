/*进程：正在运行中的程序
 * 线程：就是进程中一个负责程序执行的控制单元
 * 一个进程可以有多个线程
 * 一个进程中至少要有一个线程
 * 开启多个线程是为了同时运行多部分代码
 * 每一个线程都有自己运行的内容，即线程要执行的任务
 * 
 * 多线程的好处：解决了程序多部分同时运行的问题
 * 多线程的弊端:线程太多会导致效率变低
 * 
 * JVM启动时就开启了多个线程
 * 1、执行主函数的线程:
 * 		该线程的主要任务都定义在main函数中
 * 2、负责垃圾回收的线程
 * 		该线程的任务定义在垃圾回收器中
 * 
 * 线程的创建:
 * 1、继承Thread类 ，覆盖run方法
 * 2、实现Runnable接口 ，覆盖run方法  
 * 
 * Thread.currentThread()  //获取执行当前代码的线程对象
 * 
 * 线程的状态
 * 创建  1、继承Thread类 ，覆盖run方法      2、实现Runnable接口 ，覆盖run方法  
 * 运行  start
 * 冻结  sleep wait notify唤醒
 * 消亡 run方法运行完后 stop
 * 
 * cpu执行资格：可以被cpu处理，在处理队列中排队等待
 * cpu执行权：正在被从cpu处理
 *
 * 实现Runnable接口的好处:
 * 1、将线程的任务从线程的子类中分离出来，进行了单独的封装，
 * 		按照面向对象的思想将任务封装成对象
 * 2、避免了java单继承的局限性
 * 
 * 所以创建线程通常都使用Runnable接口的方式
 * 
 * 
 * */