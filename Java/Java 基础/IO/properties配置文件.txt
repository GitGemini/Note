* Properties 配置文件类，继承自HashTable 是一个特殊的Key-Value键值对集合，Key与Value都是String
 * Map
 * 	l--HashTable
 * 		l--Properties
 *	 特点:
 *		1、该集合中的键值对都是字符串类型
 *      2、集合中的数据可以保存到流中，或者从流中获取
 *      
 *      该集合通常用于操作以键值对形式存在的配置文件
 *      
 *      构造函数:
 *      	Properties() 创建一个无默认值的空属性列表。 
 *			Properties(Properties defaults) 创建一个带有指定默认值的空属性列表。 
 *		
 *		Properties集合的存和取：
 *			 Object setProperty(String key, String value) 调用 Hashtable 的方法 put。 
 *			 String getProperty(String key)  用指定的键在此属性列表中搜索属性。 
 *			 String getProperty(String key, String defaultValue) 用指定的键在属性列表中搜索属性。 
 *			 Set<String> stringPropertyNames()   返回此属性列表中的键集，其中该键及其对应值是字符串，如果在主属性列表中未找到同名的键，则还包括默认属性列表中不同的键。 
 *
 *
 *		与流结合获取/存储配置信息
 *			 void list(PrintStream out) 将属性列表输出到指定的输出流。 
 *			 void list(PrintWriter out) 将属性列表输出到指定的输出流。 
 * 			 void load(InputStream inStream) 从输入流中读取属性列表（键和元素对）。 
 *			 void load(Reader reader)  按简单的面向行的格式从输入字符流中读取属性列表（键和元素对）。 
 *			 void loadFromXML(InputStream in) 将指定输入流中由 XML 文档所表示的所有属性加载到此属性表中。 
 *			
 * 			 void store(OutputStream out, String comments)  以适合使用 load(InputStream) 方法加载到 Properties 表中的格式，将此 Properties 表中的属性列表（键和元素对）写入输出流。 
 *			 void store(Writer writer, String comments) 以适合使用 load(Reader) 方法的格式，将此 Properties 表中的属性列表（键和元素对）写入输出字符。 
 *			 void storeToXML(OutputStream os, String comment)发出一个表示此表中包含的所有属性的 XML 文档。 
 *			 void storeToXML(OutputStream os, String comment, String encoding) 使用指定的编码发出一个表示此表中包含的所有属性的 XML 文档。 
 *
 * */