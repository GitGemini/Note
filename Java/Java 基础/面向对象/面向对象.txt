//类是事物的描述      相当于一个类型类型比如灵长类   抽象的
//对象是事物的实例          比如人,人猿  具体的 

//成员变量对应的是事物的属性
//成员函数对应的是事物的行为
//
/*
 * 成员变量与局部变量的区别
 * 一、
 * 成员变量定义在方法之外类之内
 * 局部变量定义在方法之内
 * 二、
 * 成员变量的作用是描述类的公共属性
 * 局部变量只是在方法内部使用
 * 
 * 三、生命周期的区别
 * 成员变量的生命周期随着对象的创建而存在，随着对象的回收而消失，有默认的初始值
 * int 0
 * float 0.0f
 * double 0.0
 * boolean false
 * char ' '
 * String null
 * ClassType null
 * 局部变量的生命周期在执行到了创建这个变量的语句时存在，一旦出了自己的作用域立马消失，没有默认初始值必须先初始化才能使用
 * 
 * 4、
 * 成员变量存在于堆内存的对象中
 * 局部变量存在于栈内存的方法中
 * 
 * 成员变量都有默认初始化值
 * 局部变量没有默认初始化值
 * */

//匿名对象：没用引用变量类型指向的对象称为匿名对象
/*
* 注意事项
* 两个匿名对象永远都不可能是同一个匿名对象
* 不用给匿名对象赋值，永远无法获取到
* ==  用于引用变量的比较时，比较的是引用内存地址
* 
* 应用场景
* 如果只需要调用一个对象的方法，调用完后不再使用该对象，就可以使用匿名对象
* 好处对于这种只需要调用一次以后不再用的类，可以尽快的释放内存，同时简化书写
* 另外的作用可以作为实参调用一个函数    repair(new Car());
*/

/*权限修饰符
 * 1.private 私有修饰符，用于修饰成员，私有的内容只在本类中有效，只对本类可见
 * 2.public 公有修饰符 
 * 3.proceted
 * 4.默认修饰符  什么也不写  具有包的权限
 */

//封装  Encapsulate:隐藏对象的属性和实现细节，仅对外提供公共的访问方式
/*
* 好处:
*  1、将变化隔离
*  2、便于使用
*  3、提高复用性
*  4、提高安全性
* 原则：
* 1、将不需要对外公开的内容都隐藏起来
* 2、把属性都隐藏，提供公共方法对其访问
* 3、属性尽量都隐藏
* */